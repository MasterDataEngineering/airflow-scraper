name: update dags

on:
  pull_request:
    branches:
      - development
  workflow_dispatch:

jobs:
  check-instance-status:
    runs-on: ubuntu-latest
    outputs:
      INSTANCE_STATE: ${{ steps.check.status.outputs.INSTANCE_STATE }}
    steps:
      - name: Check status
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
          # run: |
          #   INSTANCE_STATE=$(aws ec2 describe-instance-status --include-all-instances --instance-id i-01933dcba1a6a289a --output text | grep -o 'pending\|running\|shutting-down\|terminated\|stopping\|stopped')
          #   echo "INSTANCE_STATE=$INSTANCE_STATE" >> "$GITHUB_OUTPUT"
        run: aws ec2 describe-instance-status --include-all-instances --instance-id i-01933dcba1a6a289a --output text | grep -o 'pending\|running\|shutting-down\|terminated\|stopping\|stopped'

  # turn-on-ec2:
  #   runs-on: ubuntu-latest
  #   needs: check-instance-status
  #   if: ${{ needs.check-instance-status.outputs.INSTANCE_STATE == 'stopped' }}
  #   steps:
  #     - name: Start AWS EC2
  #       env:
  #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
  #         INSTANCE_STATE: ${{ needs.check-instance-status.outputs.INSTANCE_STATE }}
  #       run: aws ec2 start-instances --instance-ids ${{secrets.AWS_EC2_INSTANCE_ID}}

  # upload-dags:
  #   runs-on: ubuntu-latest
  #   needs: check-instance-status
  #   steps:
  #     - name: save private key to pem file
  #       run: |
  #         echo "$AWS_EC2_INSTANCE_PRIVATE_KEY" >> $HOME/private_key.pem
  #         chmod 400 $HOME/private_key.pem
  #       env:
  #         AWS_EC2_INSTANCE_PRIVATE_KEY: ${{ secrets.AWS_EC2_INSTANCE_PRIVATE_KEY }}
  #     - name: upload dags to ec2
  #       run: scp -i $HOME/private_key.pem airflow/dags/* ec2-user@${{ secrets.AWS_EC2_INSTANCE_PUBLIC_IP }}:$HOME/airflow/dags
  #       env:
  #         AWS_EC2_INSTANCE_PUBLIC_IP: ${{ secrets.AWS_EC2_INSTANCE_PUBLIC_IP }}
