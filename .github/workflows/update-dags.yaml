name: update dags

on:
  pull_request:
    branches:
      - development
  workflow_dispatch:

jobs:
  check-instance-status:
    runs-on: ubuntu-latest
    outputs:
      INSTANCE_STATE: ${{ steps.check-status.outputs.INSTANCE_STATE }}
    steps:
      - name: check status
        id: check-status
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        run: |
          INSTANCE_STATE=$(aws ec2 describe-instance-status --include-all-instances --instance-id i-01933dcba1a6a289a --output text | grep -o 'pending\|running\|shutting-down\|terminated\|stopping\|stopped')
          echo "INSTANCE_STATE=$INSTANCE_STATE" >> "$GITHUB_OUTPUT"

  boot-instance:
    runs-on: ubuntu-latest
    needs: check-instance-status
    if: needs.check-instance-status.outputs.INSTANCE_STATE == 'stopped'
    steps:
      - name: start aws ec2 instance
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
          AWS_EC2_INSTANCE_ID: ${{secrets.AWS_EC2_INSTANCE_ID}}
        run: aws ec2 start-instances --instance-ids $AWS_EC2_INSTANCE_ID

  upload-dags:
    runs-on: ubuntu-latest
    needs: boot-instance
    if: |
      always() &&
      (needs.boot-instance.result == 'success' || needs.boot-instance.result == 'skipped')
    steps:
      - name: save private key to pem file
        env:
          AWS_EC2_INSTANCE_PRIVATE_KEY: ${{ secrets.AWS_EC2_INSTANCE_PRIVATE_KEY }}
        run: |
          echo "$AWS_EC2_INSTANCE_PRIVATE_KEY" >> $HOME/private_key.pem
          chmod 600 $HOME/private_key.pem
      - name: upload dags to ec2
        env:
          AWS_EC2_INSTANCE_PUBLIC_IP: ${{ secrets.AWS_EC2_INSTANCE_PUBLIC_IP }}
        run: scp -i $HOME/private_key.pem airflow/dags ec2-user@${{ secrets.AWS_EC2_INSTANCE_PUBLIC_IP }}:/home/ec2-user/airflow/dags

  shutdown-instance:
    runs-on: ubuntu-latest
    needs: [check-instance-status, upload-dags]
    if: |
      always() &&
      needs.check-instance-status.outputs.INSTANCE_STATE == 'stopped'
    steps:
      - name: stop aws ec2 instance
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
          AWS_EC2_INSTANCE_ID: ${{secrets.AWS_EC2_INSTANCE_ID}}
        run: aws ec2 stop-instances --instance-ids $AWS_EC2_INSTANCE_ID
